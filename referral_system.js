// –°–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
class ReferralSystem {
  constructor() {
    this.referralData = this.loadReferralData();
  }

  loadReferralData() {
    const data = localStorage.getItem('referralData');
    return data ? JSON.parse(data) : {
      referralCode: null,
      referredBy: null,
      referrals: [],
      totalReferrals: 0,
      rewardsClaimed: []
    };
  }

  saveReferralData() {
    localStorage.setItem('referralData', JSON.stringify(this.referralData));
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
  generateReferralCode() {
    if (this.referralData.referralCode) {
      return this.referralData.referralCode;
    }

    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let code = '';
    for (let i = 0; i < 6; i++) {
      code += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    
    this.referralData.referralCode = code;
    this.saveReferralData();
    return code;
  }

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
  applyReferralCode(code) {
    if (this.referralData.referredBy) {
      return { success: false, message: '–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥' };
    }

    if (code === this.referralData.referralCode) {
      return { success: false, message: '–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥' };
    }

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    this.referralData.referredBy = code;
    this.saveReferralData();

    // –î–∞–µ–º –±–æ–Ω—É—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
    if (window.achievementSystem) {
      window.achievementSystem.addBonusAttempts(2);
    }

    return { 
      success: true, 
      message: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ 2 –±–æ–Ω—É—Å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏',
      bonusAttempts: 2
    };
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à –∫–æ–¥)
  addReferral(referralUserId) {
    if (!this.referralData.referrals.includes(referralUserId)) {
      this.referralData.referrals.push(referralUserId);
      this.referralData.totalReferrals++;
      this.saveReferralData();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
      this.checkReferralAchievements();
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  checkReferralAchievements() {
    const referralCount = this.referralData.totalReferrals;
    
    // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    const referralAchievements = [
      { count: 1, name: '–ü–µ—Ä–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª', reward: 1 },
      { count: 5, name: '5 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', reward: 3 },
      { count: 10, name: '10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', reward: 5 },
      { count: 25, name: '25 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', reward: 10 },
      { count: 50, name: '50 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', reward: 20 }
    ];

    referralAchievements.forEach(achievement => {
      if (referralCount >= achievement.count && 
          !this.referralData.rewardsClaimed.includes(achievement.count)) {
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É
        if (window.achievementSystem) {
          window.achievementSystem.addBonusAttempts(achievement.reward);
        }
        
        this.referralData.rewardsClaimed.push(achievement.count);
        this.saveReferralData();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showReferralAchievementNotification(achievement);
      }
    });
  }

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
  showReferralAchievementNotification(achievement) {
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    if (window.audioSystem) {
      window.audioSystem.playAchievementSound();
    }
    
    const notification = document.createElement('div');
    notification.className = 'achievement-notification';
    notification.innerHTML = `
      <div class="achievement-icon">üë•</div>
      <div class="achievement-content">
        <div class="achievement-title">${achievement.name}</div>
        <div class="achievement-description">–ü–æ–ª—É—á–µ–Ω–æ ${achievement.reward} –±–æ–Ω—É—Å–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫!</div>
      </div>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.classList.add('show');
    }, 100);
    
    setTimeout(() => {
      notification.classList.remove('show');
      setTimeout(() => {
        document.body.removeChild(notification);
      }, 300);
    }, 3000);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  getReferralStats() {
    return {
      referralCode: this.referralData.referralCode,
      referredBy: this.referralData.referredBy,
      totalReferrals: this.referralData.totalReferrals,
      rewardsClaimed: this.referralData.rewardsClaimed,
      nextReward: this.getNextReward()
    };
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –Ω–∞–≥—Ä–∞–¥—ã
  getNextReward() {
    const referralCount = this.referralData.totalReferrals;
    const rewards = [1, 5, 10, 25, 50];
    
    for (let reward of rewards) {
      if (referralCount < reward && !this.referralData.rewardsClaimed.includes(reward)) {
        return {
          count: reward,
          remaining: reward - referralCount,
          reward: this.getRewardAmount(reward)
        };
      }
    }
    
    return null;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –Ω–∞–≥—Ä–∞–¥—ã
  getRewardAmount(count) {
    const rewardMap = {
      1: 1,
      5: 3,
      10: 5,
      25: 10,
      50: 20
    };
    return rewardMap[count] || 0;
  }

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
  copyReferralCode() {
    const code = this.generateReferralCode();
    
    if (navigator.clipboard) {
      navigator.clipboard.writeText(code).then(() => {
        this.showCopyNotification('–ö–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
      });
    } else {
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      const textArea = document.createElement('textarea');
      textArea.value = code;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      this.showCopyNotification('–ö–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
    }
  }

  // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
  shareReferralCode() {
    const code = this.generateReferralCode();
    const shareText = `üéÅ –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –º–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ "${code}" –≤ Gift Roulette –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏!`;
    
    if (navigator.share) {
      navigator.share({
        title: 'Gift Roulette - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥',
        text: shareText,
        url: window.location.href
      });
    } else {
      // Fallback - –∫–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
      if (navigator.clipboard) {
        navigator.clipboard.writeText(shareText).then(() => {
          this.showCopyNotification('–¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
        });
      }
    }
  }

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏
  showCopyNotification(message) {
    const notification = document.createElement('div');
    notification.className = 'achievement-notification';
    notification.innerHTML = `
      <div class="achievement-icon">üìã</div>
      <div class="achievement-content">
        <div class="achievement-title">–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!</div>
        <div class="achievement-description">${message}</div>
      </div>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.classList.add('show');
    }, 100);
    
    setTimeout(() => {
      notification.classList.remove('show');
      setTimeout(() => {
        document.body.removeChild(notification);
      }, 300);
    }, 2000);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
  getReferralLink() {
    const code = this.generateReferralCode();
    const currentUrl = new URL(window.location.href);
    currentUrl.searchParams.set('ref', code);
    return currentUrl.toString();
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∏—Å—Ç–µ–º—ã —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
window.referralSystem = new ReferralSystem();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –∏–∑ URL –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
  const urlParams = new URLSearchParams(window.location.search);
  const referralCode = urlParams.get('ref');
  
  if (referralCode && window.referralSystem) {
    const result = window.referralSystem.applyReferralCode(referralCode);
    if (result.success) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞
      setTimeout(() => {
        const notification = document.createElement('div');
        notification.className = 'achievement-notification';
        notification.innerHTML = `
          <div class="achievement-icon">üéÅ</div>
          <div class="achievement-content">
            <div class="achievement-title">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω!</div>
            <div class="achievement-description">${result.message}</div>
          </div>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
          notification.classList.add('show');
        }, 100);
        
        setTimeout(() => {
          notification.classList.remove('show');
          setTimeout(() => {
            document.body.removeChild(notification);
          }, 300);
        }, 4000);
      }, 1000);
    }
  }
}); 